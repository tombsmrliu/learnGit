1.3Git基础
  一git基本的特性
   特点1 直接记录快照，而非差异比较
      git和其他版本控制系统的主要区别在于它对数据处理的方法。
   对比：
        git
          把数据看作是对小型文件系统的快照，将保存的时的全部文件制作一个快照并且保存这个快照的索引。
        其他系统 
          以文件变更列表的方式存储信息，可以将保存的信息看作一组基本文件和每个文件随时间逐步累积的差异。
    git更像一个小型文件系统，再此基础上构建的超强工具
   特点2 近乎所有操作都是本地执行
       git的一切操作都是在本地进行的，浏览历史项目是在本地数据库读取的。
   特点3 git保证数据完整性
       在git中所有数据在存储钱都计算校验和，然后利用校验和来作为指针。若传送过程中丢失信息或者损坏文件，git能够立刻发现。
       git以SHA-1散列（hash，哈希）是一个由40个十六禁止字符组成的字符串，基于git中文件内容和目录结构计算来的
       例如：24addcebcacd3647832826b472834bcdafc82734ba
   特点3 git一般只添加数据
       执行git操作一般只是往数据库添加数据。一旦数据提交就很难丢失
  二git的工作原理
    1.git存在三种工作状态
       (1)已提交(committed)  已提交表示数据已经安全的保存在本地数据库中
       (2)已修改(modified)   已修改表示修改了文件，但还没保存到数据库中
       (2)已暂存(staged）    已暂存表示对一个已经修改文件的当前版本做了标记，使它包含在下次提交的快照中。
    2.git三个工作区域概念
         （1）git仓库
                是用来保存项目的元数据和对象数据库的地方。这是git的重要部分，从其他计算机克隆仓库的时候，拷贝的这里的数据。
         （2）工作目录
                是对项目的某个版本独立提取出来的内容。从git仓库的压缩数据库中提取出来的文件，存放在磁盘上供用户使用或者修改。
         （3）暂存区
                是一个文件，保存了下次将要提交的文件列表信息，一般在git仓库目录中。夜叫做索引。
    3.git的基本工作流程
        （1）在工作目录中修改文件。
        （2）暂存文件，将文件的快照放入暂存区域。
        （3）提交更新，找到暂存区域的文件，将快照永久性存储到git仓库目录。
1.6初次运行git前的配置
   一git配置概述
   git自带一个git config工具来帮助设置控制git外观和行为的配置变量。这些变量存储在三个不同位置：
     （1）/etc/gitconfig文件：包含系统上所有用户和他们的仓库通用配置。使用带有--system选项的git config时，他会从此文件读写配置变量。
     （2）～/.gitconfig或者～/.conif/git/config文件：只针对当前用户。可以通过传递--global选项让git读写此文件。
     （3)当前使用仓库的git目录中的config文件（就是.git/config):针对该仓库。
   二git用户信息
     1.用户信息概述
        当安装完用户应该做的第一件事情就是设置用户名称和邮件地址。这样做是为了每一个git提交所需要。并且会写入每一次提交中，不可更改：
    $git config --global user.name ”Tombs Liu“
    $git config --global user.email tombsliu@163.com
     2.检查配置信息
        如果想要检查你的配置信息，可以使用git config --list命令来列出git当时能找到的配置    $ git config --list
      user.name=Tombs Liu
      user.email=tombsliu@163.com
      color.status=auto
      color.branch=auto
      color.interactive=auto
      color.diff=auto
      ...
        git会从不同的文件中读取配置，因此你会看到重复的变量，可以使用git config <key>:来检查某一项配置
    $ git config user.name
      Tombs Liu
        
